version: '3.4'
services:
  app:
    build:
      context: .
      args:
        BASE_IMAGE: datadog/dd-apm-demo:rb-2.7
    depends_on:
      - ddagent
      - mysql
    environment:
      - BUNDLE_GEMFILE=/app/Gemfile
      - DATABASE_URL=mysql2://mysql:mysql@mysql:3306
      - DATABASE_ROOT_USER=root
      - DATABASE_ROOT_PASSWORD=root
      - DD_AGENT_HOST=ddagent
      - DD_METRIC_AGENT_PORT=8125
      - DD_TRACE_AGENT_PORT=8126
      - DD_HEALTH_METRICS_ENABLED=true
      - DD_SERVICE=acme-rails-seven-delayed-job
      - RAILS_ENV=production
      - RAILS_LOG_TO_STDOUT=true
      - SECRET_KEY_BASE=5ced2602472cdf650e2cfa5be40c7d0dffd4e1da1483e21fa9c776e338b363c8bf75144bc6e6c5177a0d7a208a899552f98b3f82d4ea74cf5f9b9d3accbb1537
      - DD_DEMO_ENV_PROCESS=puma
      - DD_DEMO_ENV_FEATURES=tracing
    expose:
      - "80"
    ports:
      - "80:80"
    stdin_open: true
    tty: true
  ddagent:
    image: datadog/dd-apm-demo:agent
    environment:
      - DD_APM_ENABLED=true
      - DD_PROCESS_AGENT_ENABLED=false
      - DD_BIND_HOST=0.0.0.0
      - DD_API_KEY
      - LOG_LEVEL=DEBUG
      - DD_LOGS_STDOUT=yes
      - DD_DOGSTATSD_NON_LOCAL_TRAFFIC=true
    expose:
      - "8125/udp"
      - "8126"
  worker-delayed-job:
    build:
      context: .
      args:
        BASE_IMAGE: datadog/dd-apm-demo:rb-2.7
    command: bin/delayed_job run
    entrypoint: 'bundle exec bin/delayed_job run'
    environment:
      - BUNDLE_GEMFILE=/app/Gemfile
      - DATABASE_URL=mysql2://mysql:mysql@mysql:3306
      - DATABASE_ROOT_USER=root
      - DATABASE_ROOT_PASSWORD=root
      - DD_AGENT_HOST=ddagent
      - DD_METRIC_AGENT_PORT=8125
      - DD_TRACE_AGENT_PORT=8126
      - DD_HEALTH_METRICS_ENABLED=true
      - DD_SERVICE=acme-rails-seven-delayed-job-worker
      - RAILS_ENV=production
      - RAILS_LOG_TO_STDOUT=true
      - SECRET_KEY_BASE=5ced2602472cdf650e2cfa5be40c7d0dffd4e1da1483e21fa9c776e338b363c8bf75144bc6e6c5177a0d7a208a899552f98b3f82d4ea74cf5f9b9d3accbb1537
      - DD_DEMO_ENV_PROCESS=puma
      - DD_DEMO_ENV_FEATURES=tracing
    expose:
      - "81"
    stdin_open: true
    tty: true
    depends_on:
      - ddagent
  mysql:
    image: mysql:8.0
    command: --default-authentication-plugin=mysql_native_password
    environment:
      - MYSQL_DATABASE=acme_production
      - MYSQL_ROOT_PASSWORD=root
      - MYSQL_ROOT_HOST=%
      - MYSQL_PASSWORD=mysql
      - MYSQL_USER=mysql
    expose:
      - "3306"
  # Build at dd-trace-rb level to copy in current code
  # and use it as the `ddtrace` gem.
  integration-tester:
    build:
      context: ../../..
      dockerfile: integration/apps/rails-seven/Dockerfile-ci
      args:
        BASE_IMAGE: ${APP_IMAGE}
    command: bin/test
    depends_on:
      - app
    environment:
      - BUNDLE_GEMFILE=/app/Gemfile
      - DATABASE_URL=mysql2://mysql:mysql@mysql:3306
      - DD_AGENT_HOST=ddagent
      - DD_METRIC_AGENT_PORT=8125
      - DD_TRACE_AGENT_PORT=8126
      - DD_HEALTH_METRICS_ENABLED=true
      - DD_SERVICE=acme-rails-seven-tester
      - RAILS_ENV=test
      - SECRET_KEY_BASE=5ced2602472cdf650e2cfa5be40c7d0dffd4e1da1483e21fa9c776e338b363c8bf75144bc6e6c5177a0d7a208a899552f98b3f82d4ea74cf5f9b9d3accbb1537
      - HEALTH_CHECK_URL=http://app/health
      - HEALTH_CHECK_INTERVAL=1
      - HEALTH_CHECK_MAX_ATTEMPTS=60
      - TEST_HOSTNAME=app
      - TEST_PORT=80
      - TEST_INTEGRATION=true
    # volumes:
    #   - .:/app
    #   - ../../images/include:/vendor/dd-demo
    #   - ../../..:/vendor/dd-trace-rb
