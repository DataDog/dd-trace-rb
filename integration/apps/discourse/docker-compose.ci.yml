version: '3.4'
services:
  app:
    # Build at dd-trace-rb level to copy in current code
    # and use it as the `ddtrace` gem.
    build:
      context: ../../..
      dockerfile: integration/apps/discourse/Dockerfile-ci
      args:
        BASE_IMAGE: ${APP_IMAGE}
    depends_on:
      - ddagent
      - redis
      - postgres
    environment:
      - BUNDLE_GEMFILE=/app/Gemfile
      - REDIS_URL=redis://redis:6379
      - DATABASE_URL=postgres://postgres:postgres@postgres:5432
      - DD_AGENT_HOST=ddagent
      - DD_METRIC_AGENT_PORT=8125
      - DD_TRACE_AGENT_PORT=8126
      - DD_HEALTH_METRICS_ENABLED=true
      - DD_SERVICE=acme-discourse
      - DD_PROFILING_ENABLED=true
      # Use these to choose what is run
      - DD_DEMO_ENV_PROCESS # needs to be specified, see README for available options
      - DD_DEMO_ENV_FEATURES=tracing,profiling
    expose:
      - "80"
    stdin_open: true
    tty: true
  ddagent:
    image: datadog/dd-apm-demo:agent
    environment:
      - DD_APM_ENABLED=true
      - DD_PROCESS_AGENT_ENABLED=false
      - DD_BIND_HOST=0.0.0.0
      - DD_API_KEY=00000000000000000000000000000000
      - LOG_LEVEL=DEBUG
      - DD_LOGS_STDOUT=yes
      - DD_DOGSTATSD_NON_LOCAL_TRAFFIC=true
    expose:
      - "8125/udp"
      - "8126"
  # Build at dd-trace-rb level to copy in current code
  # and use it as the `ddtrace` gem.
  integration-tester:
    build:
      context: ../../..
      dockerfile: integration/apps/discourse/Dockerfile-ci
      args:
        BASE_IMAGE: ${APP_IMAGE}
    command: bin/test
    depends_on:
      - app
    environment:
      - BUNDLE_GEMFILE=/app/Gemfile
      - TEST_HOSTNAME=app
      - TEST_PORT=80
      - TEST_INTEGRATION=true
      - HEALTH_CHECK_URL=http://app/health
      - HEALTH_CHECK_INTERVAL=1
      - HEALTH_CHECK_MAX_ATTEMPTS=30
    # volumes:
    #   - .:/app
    #   - ../../images/include:/vendor/dd-demo
    #   - ../../..:/vendor/dd-trace-rb
  redis:
    image: redis:6.2-buster
    expose:
      - "6379"
  postgres:
    image: postgres:bullseye
    environment:
      - POSTGRES_PASSWORD=password
      - POSTGRES_USER=USER
#      - POSTGRES_DB=$TEST_POSTGRES_DB
    expose:
      - "5432"
#    ports:
#      - "${TEST_POSTGRES_PORT}:5432"
