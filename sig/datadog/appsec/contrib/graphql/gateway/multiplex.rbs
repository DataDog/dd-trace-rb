module Datadog
  module AppSec
    module Contrib
      module GraphQL
        module Gateway
          class Multiplex < Instrumentation::Gateway::Argument
            @multiplex: GraphQL::Execution::Multiplex

            @arguments: Hash[String, Array[Hash[String, String]]]

            attr_reader multiplex: GraphQL::Execution::Multiplex

            def initialize: (GraphQL::Execution::Multiplex multiplex) -> void

            def arguments: () -> Hash[String, Array[Hash[String, String]]]

            def queries: () -> Array[GraphQL::Query]

            private

            def create_arguments_hash: () -> Hash[String, Array[Hash[String, String]]]

            def set_hash_with_variables: (Hash[String, String] resolver_hash, Array[GraphQL::Language::Nodes::Argument] arguments, Hash[String, String|Integer] provided_variables) -> void
          end
        end
      end
    end
  end
end
