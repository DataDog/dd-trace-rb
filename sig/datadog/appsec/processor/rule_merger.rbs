module Datadog
  module AppSec
    class Processor
      module RuleMerger
        class RuleVersionMismatchError < StandardError
          def initialize: (::String version1, ::String version2) -> void
        end

        type rules = ::Hash[::String, untyped]
        type data = ::Array[::Hash[::String, untyped]]
        type overrides = ::Array[::Array[::Hash[::String, untyped]]]
        type exclusions = ::Array[::Array[::Hash[::String, untyped]]]
        type custom_rules = ::Array[::Array[::Hash[::String, untyped]]]
        type processors = ::Array[::Hash[::String, untyped]]
        type scanners = ::Array[::Hash[::String, untyped]]

        DEFAULT_WAF_PROCESSORS: processors
        DEFAULT_WAF_SCANNERS: processors

        def self.merge: (rules: ::Array[rules], ?data: ::Array[data], ?overrides: overrides, ?exclusions: exclusions, ?custom_rules: custom_rules, ?processors: processors, ?scanners: scanners) -> rules

        private

        def self.combine_rules: (::Array[rules] rules) -> rules

        def self.combine_data: (::Array[data] data) -> data?

        def self.merge_data_base_on_expiration: (data data1, data data2) -> data

        def self.combine_overrides: (overrides overrides) -> overrides?

        def self.combine_exclusions: (exclusions exclusions) -> exclusions?

        def self.combine_custom_rules: (custom_rules custom_rules) -> custom_rules?
      end
    end
  end
end
