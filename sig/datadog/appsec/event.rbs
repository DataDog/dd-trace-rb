module Datadog
  module AppSec
    module Event
      interface _RequestInterface
        def host: () -> ::String?
        def user_agent: () -> ::String?
        def remote_addr: () -> ::String?
        def headers: () -> Enumerable[[::String, ::String]]
      end

      interface _ResponseInterface
        def headers: () -> Enumerable[[::String, ::String]]
      end

      type tags = ::Hash[::String, ::String]

      DERIVATIVE_SCHEMA_KEY_PREFIX: ::String

      DERIVATIVE_SCHEMA_MAX_COMPRESSED_SIZE: ::Integer

      ALLOWED_REQUEST_HEADERS: ::Array[::String]

      ALLOWED_RESPONSE_HEADERS: ::Array[::String]

      def self.record: (Context context, ?request: _RequestInterface?, ?response: _ResponseInterface?) -> void

      def self.tag_and_keep!: (Context context, WAF::Result waf_result) -> void

      private

      def self.waf_tags: (::Array[untyped]) -> tags

      def self.request_tags: (_RequestInterface request) -> tags

      def self.response_tags: (_ResponseInterface response) -> tags

      def self.json_parse: (untyped value) -> ::String?

      def self.add_distributed_tags: (::Datadog::Tracing::TraceOperation? trace) -> void
    end
  end
end
