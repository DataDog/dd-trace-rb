module Datadog
  module AppSec
    module SecurityEngine
      class Runner
        type input_data = ::Hash[::String, untyped]

        @mutex: ::Mutex

        @handle_ref: ThreadSafeRef

        @waf_handle: WAF::Handle

        @waf_context: WAF::Context

        @ruleset_version: ::String

        @waf_addresses: ::Array[::String]

        @debug_tag: ::String

        SUCCESSFUL_EXECUTION_CODES: ::Array[::Symbol]

        attr_reader ruleset_version: ::String

        attr_reader waf_addresses: ::Array[::String]

        def initialize: (handle_ref: ThreadSafeRef, ruleset_version: ::String, waf_addresses: ::Array[::String]) -> void

        def run: (input_data persistent_data, input_data ephemeral_data, ?::Integer timeout) -> SecurityEngine::result

        def waf_context: () -> WAF::Context

        def finalize!: () -> void

        private

        def try_run: (input_data persistent_data, input_data ephemeral_data, untyped timeout) -> WAF::Result

        def report_execution: (WAF::Result result) -> void
      end
    end
  end
end
