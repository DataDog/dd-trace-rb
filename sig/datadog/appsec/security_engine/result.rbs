module Datadog
  module AppSec
    module SecurityEngine
      module Result
        class Base
          @events: WAF::events

          @actions: WAF::actions

          @attributes: WAF::attributes

          @keep: bool

          @timeout: bool

          @input_truncated: bool

          @duration_ns: ::Integer

          @duration_ext_ns: ::Integer

          attr_reader events: WAF::events

          attr_reader actions: WAF::actions

          attr_reader attributes: WAF::attributes

          attr_reader duration_ns: ::Integer

          attr_reader duration_ext_ns: ::Integer

          def initialize: (
            events: WAF::events,
            actions: WAF::actions,
            attributes: WAF::attributes,
            duration_ns: ::Integer,
            duration_ext_ns: ::Integer,
            timeout: bool,
            keep: bool,
            input_truncated: bool
          ) -> void

          def keep?: () -> bool

          def timeout?: () -> bool

          def match?: () -> bool

          def error?: () -> bool

          def input_truncated?: () -> bool
        end

        # A result that indicates a security rule match
        class Match < Base
          def match?: () -> bool

          def error?: () -> bool
        end

        # A result that indicates a successful security rules check without a match
        class Ok < Base
          def match?: () -> bool

          def error?: () -> bool
        end

        # A result that indicates an internal security library error
        class Error
          @events: WAF::events

          @actions: WAF::actions

          @attributes: WAF::attributes

          @duration_ns: ::Integer

          @duration_ext_ns: ::Integer

          @input_truncated: bool

          attr_reader events: WAF::events

          attr_reader actions: WAF::actions

          attr_reader attributes: WAF::attributes

          attr_reader duration_ns: ::Integer

          attr_reader duration_ext_ns: ::Integer

          def initialize: (duration_ext_ns: ::Integer, input_truncated: bool) -> void

          def keep?: () -> bool

          def timeout?: () -> bool

          def match?: () -> bool

          def error?: () -> bool

          def input_truncated?: () -> bool
        end
      end
    end
  end
end
