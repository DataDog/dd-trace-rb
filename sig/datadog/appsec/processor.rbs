module Datadog
  module AppSec
    class Processor
      def self.active_context: () -> Context

      private

      attr_reader diagnostics: WAF::LibDDWAF::Object?
      attr_reader addresses: ::Array[::String]

      @handle: WAF::Handle
      @ruleset: ::Hash[::String, untyped]
      @addresses: ::Array[::String]

      def initialize: (ruleset: ::Hash[untyped, untyped], telemetry: Core::Telemetry::Component) -> void
      def ready?: () -> bool
      def finalize: () -> void

      attr_reader handle: untyped

      private

      def require_libddwaf: () -> bool
      def libddwaf_provides_waf?: () -> bool
      def create_waf_handle: (Core::Configuration::Settings::_AppSec settings, ::Hash[String, untyped] ruleset) -> bool
      def libddwaf_platform: () -> ::String
      def ruby_platforms: () -> ::Array[::String]
    end
  end
end
