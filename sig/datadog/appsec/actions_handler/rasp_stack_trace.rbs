module Datadog
  module AppSec
    module ActionsHandler
      class StackTraceInMetastruct
        type stack_trace = Hash[Symbol, String | nil | Array[Datadog::AppSec::ActionsHandler::StackTraceCollection::stack_frame]]

        class Noop
          def count: () -> Integer

          def push: (stack_trace stack_trace) -> void
        end

        @metastruct: Datadog::Tracing::Metadata::Metastruct

        def self.create: (Datadog::Tracing::Metadata::Metastruct? metastruct) -> (StackTraceInMetastruct::Noop | StackTraceInMetastruct)

        def initialize: (Datadog::Tracing::Metadata::Metastruct metastruct) -> void

        def count: () -> Integer

        def push: (stack_trace stack_trace) -> void
      end
    end
  end
end
