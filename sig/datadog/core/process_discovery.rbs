module Datadog
  module Core
    module ProcessDiscovery
      ONLY_ONCE: Core::Utils::OnlyOnce

      self.@file_descriptor: TracerMemfd?

      def self._native_store_tracer_metadata: (
        Datadog::Core::Logger logger,
        runtime_id: String,
        tracer_language: String,
        tracer_version: String,
        hostname: String,
        service_name: String,
        service_env: String,
        service_version: String
      ) -> TracerMemfd?

      def self._native_close_tracer_memfd: (TracerMemfd tracer_memfd, Datadog::Core::Logger logger) -> void

      def self.publish: (
        Datadog::Core::Configuration::Settings settings,
      ) -> void

      def self.shutdown!: () -> void

      def self.get_metadata: (Datadog::Core::Configuration::Settings settings) -> {
        runtime_id: String,
        tracer_language: String,
        tracer_version: String,
        hostname: String,
        service_name: String,
        service_env: String,
        service_version: String
      }

      def self.apply_at_fork_patch: () -> void
    end
  end
end
