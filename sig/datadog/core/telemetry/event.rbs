module Datadog
  module Core
    module Telemetry
      class Event
        class Base
          def payload: (int seq_id) -> Hash[Symbol, untyped]
          def type: -> String?
        end

        class AppStarted < Base
          TARGET_OPTIONS: Array[String]

          @seq_id: int

          private

          def products: -> Hash[Symbol, untyped]

          def configuration: -> Array[Hash[Symbol, untyped]]

          def agent_transport: (untyped config) -> String

          def conf_value: (String name, Object value, ?String origin) -> Hash[Symbol, untyped]

          def to_value: (Object value) -> Object

          def install_signature: -> Hash[Symbol, Object]
        end

        class AppDependenciesLoaded < Base
          private

          def dependencies: -> Array[Hash[Symbol, String]]
        end

        class AppIntegrationsChange < Base
          private

          def integrations: -> Array[Hash[Symbol, string]]

          def patch_error: (untyped integration) -> String
        end

        class AppClientConfigurationChange < Base
          @changes: Enumerable[[String, Numeric | bool | String | int]]
          @origin: String

          def initialize: (Enumerable[[String, Numeric | bool | String]] changes, String origin) -> void

          def configuration: (int seq_id) -> Array[Hash[Symbol, untyped]]
        end

        class AppHeartbeat < Base
        end

        class AppClosing < Base
        end
      end
    end
  end
end
