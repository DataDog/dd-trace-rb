module Datadog
  module Core
    module Telemetry
      # Telemetry entrypoint, coordinates sending telemetry events at various points in app lifecycle.
      class Client
        @metric_queue: untyped

        attr_reader emitter: Core::Telemetry::Emitter

        attr_reader enabled: bool

        attr_reader metrics_enabled: bool

        attr_reader unsupported: bool

        attr_reader worker: untyped

        attr_reader metrics_worker: untyped

        include Core::Utils::Forking

        def initialize: (heartbeat_interval_seconds: untyped, metrics_enabled: bool, ?enabled: bool) -> void

        def disable!: () -> untyped

        def started!: () -> (nil | untyped)

        def emit_closing!: () -> (nil | untyped)

        def stop!: () -> (nil | untyped)

        def integrations_change!: () -> (nil | untyped)

        def client_configuration_change!: (untyped changes) -> (nil | untyped)

        def add_count_metric: (untyped namespace, untyped name, untyped value, untyped tags) -> (nil | untyped)

        def add_rate_metric: (untyped namespace, untyped name, untyped value, untyped tags) -> (nil | untyped)

        def add_gauge_metric: (untyped namespace, untyped name, untyped value, untyped tags) -> (nil | untyped)

        def add_distribution_metric: (untyped namespace, untyped name, untyped value, untyped tags) -> (nil | untyped)

        private

        def heartbeat!: () -> (nil | untyped)

        def flush_metrics!: () -> (nil | untyped)
      end
    end
  end
end
