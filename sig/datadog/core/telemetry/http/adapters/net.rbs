module Datadog
  module Core
    module Telemetry
      module Http
        module Adapters
          class Net
            type response = Datadog::Core::Telemetry::Http::Adapters::Net::Response | ::Datadog::Core::Telemetry::Http::InternalErrorResponse

            attr_reader hostname: String

            attr_reader port: Integer?

            attr_reader timeout: Float | Integer

            attr_reader ssl: bool

            DEFAULT_TIMEOUT: 30

            def initialize: (hostname: String, ?port: Integer?, ?timeout: Float | Integer, ?ssl: bool?) -> void

            def open: () { (::Net::HTTP http) -> ::Net::HTTPResponse } -> untyped

            def post: (untyped env) -> response

            class Response
              include Datadog::Core::Telemetry::Http::Response

              attr_reader http_response: untyped

              def initialize: (untyped http_response) -> void

              def payload: () -> untyped

              def code: () -> untyped

              def ok?: () -> untyped

              def unsupported?: () -> untyped

              def not_found?: () -> untyped

              def client_error?: () -> untyped

              def server_error?: () -> untyped

              def inspect: () -> ::String
            end
          end
        end
      end
    end
  end
end
