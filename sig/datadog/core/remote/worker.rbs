module Datadog
  module Core
    module Remote
      class Worker
        attr_reader starting: bool
        attr_reader stopping: bool
        attr_reader started: bool
        attr_reader thr: Thread?
        attr_reader interval: ::Float
        attr_reader mutex: ::Thread::Mutex
        attr_reader block: (^() -> void)

        def initialize: (interval: ::Float) { () -> void } -> void

        def start: () -> void

        def stop: () -> void

        def started?: () -> bool

        private

        def acquire_lock: () -> void

        def release_lock: () -> void

        def poll: (::Float interval) -> void

        def call: () -> void
      end
    end
  end
end
