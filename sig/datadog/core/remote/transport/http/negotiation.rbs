module Datadog
  module Core
    module Transport
      module HTTP
        module Negotiation
          class Response
            include Datadog::Transport::HTTP::Response

            include Core::Transport::Negotiation::Response

            def initialize: (untyped http_response, ?::Hash[untyped, untyped] options) -> void
          end

          module Client : HTTP::Client
            def send_info_payload: (untyped request) -> untyped
          end

          module API
            module Spec
              attr_reader info: untyped

              def info=: (untyped endpoint) -> untyped

              def send_info: (untyped env) ?{ () -> untyped } -> untyped

              class NoNegotiationEndpointDefinedError < StandardError
                attr_reader spec: untyped

                def initialize: (untyped spec) -> void

                def message: () -> "No info endpoint is defined for API specification!"
              end
            end

            module Instance : HTTP::API::Instance
              def send_info: (untyped env) -> untyped

              class NegotiationNotSupportedError < StandardError
                attr_reader spec: untyped

                def initialize: (untyped spec) -> void

                def message: () -> "Info not supported for this API!"
              end
            end

            class Endpoint < Datadog::Transport::HTTP::API::Endpoint
              def initialize: (untyped path) -> void

              def call: (untyped env) { (untyped) -> untyped } -> untyped
            end
          end
        end
      end
    end
  end
end
