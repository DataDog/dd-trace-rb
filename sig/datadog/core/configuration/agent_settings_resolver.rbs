module Datadog
  module Core
    module Configuration
      class AgentSettingsResolver
        @settings: untyped
        @logger: untyped
        @configured_hostname: untyped
        @configured_port: untyped
        @configured_ssl: untyped
        @configured_timeout_seconds: untyped
        @configured_uds_path: untyped
        @uds_fallback: untyped
        @mixed_http_and_uds: untyped
        @parsed_url: untyped

        def self.call: (untyped settings, ?logger: untyped) -> untyped

        private

        attr_reader logger: untyped

        attr_reader settings: untyped

        def initialize: (untyped settings, ?logger: untyped) -> void

        def call: () -> untyped

        def adapter: () -> untyped

        def configured_hostname: () -> untyped

        def configured_port: () -> untyped

        def configured_ssl: () -> untyped

        def configured_timeout_seconds: () -> untyped

        def configured_uds_path: () -> untyped

        def parsed_url_ssl?: () -> (nil | untyped)

        def try_parsing_as_integer: (value: untyped, friendly_name: untyped) -> untyped

        def ssl?: () -> (false | untyped)

        def hostname: () -> untyped

        def port: () -> untyped

        def timeout_seconds: () -> untyped

        def parsed_url_uds_path: () -> (nil | untyped)

        def uds_path: () -> (nil | untyped)

        def uds_fallback: () -> untyped

        def should_use_uds?: () -> untyped

        def mixed_http_and_uds: () -> untyped

        def can_use_uds?: () -> untyped

        def parsed_url: () -> untyped

        def pick_from: (*untyped configurations_in_priority_order) -> untyped

        def warn_if_configuration_mismatch: (untyped detected_configurations_in_priority_order) -> (nil | untyped)

        def log_warning: (untyped message) -> (untyped | nil)

        def http_scheme?: (untyped uri) -> untyped

        def parsed_http_url: () -> (untyped | nil)

        def unix_scheme?: (untyped uri) -> untyped

        class DetectedConfiguration
          @friendly_name: untyped

          @value: untyped

          attr_reader friendly_name: untyped

          attr_reader value: untyped

          def initialize: (friendly_name: untyped, value: untyped) -> void

          def value?: () -> untyped
        end
      end
    end
  end
end
