module Datadog
  module DI
    module Transport
      module Input
        class EncodedParcel
          include Datadog::Core::Transport::Parcel
        end

        class Request < Datadog::Core::Transport::Request
          @serialized_tags: untyped

          attr_reader serialized_tags: untyped

          def initialize: (untyped parcel, untyped serialized_tags) -> void
        end

        class Transport
          @apis: untyped

          @logger: untyped

          @client: untyped

          attr_reader client: untyped

          attr_reader apis: untyped

          attr_reader default_api: untyped

          attr_reader current_api_id: untyped

          attr_reader logger: untyped

          def initialize: (untyped apis, untyped default_api, logger: untyped) -> void

          def current_api: () -> untyped

          def send_input: (untyped payload, untyped tags) -> untyped
        end
      end
    end
  end
end
