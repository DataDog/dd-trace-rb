module Datadog
  module DI
    class Instrumenter
      class Location
        def initialize: (String path, Integer lineno, String? label) -> void
        
        def path: () -> String
        def lineno: () -> Integer
        def label: () -> String?
      end
      
      @settings: untyped

      @serializer: Serializer

      @code_tracker: CodeTracker
      
      @logger: Core::Logger

      @lock: Mutex

      def initialize: (untyped settings, Serializer serializer, Core::Logger logger, ?code_tracker: CodeTracker?) -> void

      attr_reader settings: untyped

      attr_reader serializer: Serializer

      attr_reader code_tracker: CodeTracker
      
      attr_reader logger: Core::Logger

      def hook_method: (Probe probe) ?{ (?) -> untyped } -> void

      def unhook_method: (Probe probe) -> void
      def hook_line: (Probe probe) ?{ (?) -> untyped } -> void

      def unhook_line: (Probe probe) -> void

      def hook: (Probe probe) { (?) -> untyped } -> void

      def unhook: (Probe probe) -> void

      private

      attr_reader lock: untyped
      def symbolize_class_name: (untyped cls_name) -> untyped
    end
  end
end
