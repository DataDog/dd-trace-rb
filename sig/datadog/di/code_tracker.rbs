module Datadog
  module DI
    class CodeTracker
      @registry: Hash[String,RubyVM::InstructionSequence]

      @lock: Thread::Mutex

      @compiled_trace_point: TracePoint?

      def initialize: () -> void

      def start: () -> void
      def active?: () -> bool
      def iseqs_for_path_suffix: (String suffix) -> (::Array[RubyVM::InstructionSequence])
      def stop: () -> void
      def clear: () -> void

      private
      attr_reader registry: Hash[String,RubyVM::InstructionSequence]
      attr_reader trace_point_lock: Thread::Mutex
      attr_reader registry_lock: Thread::Mutex
    end
  end
end
