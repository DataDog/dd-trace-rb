module Datadog
  module DataStreams
      class PathwayContext
        @hash: ::Integer

        @pathway_start_sec: ::Float

        @current_edge_start_sec: ::Float

        @parent_hash: ::Integer?
        @previous_direction: ::String

        @closest_opposite_direction_hash: ::Integer

        @closest_opposite_direction_edge_start: ::Float

        attr_accessor hash: ::Integer

        attr_accessor pathway_start_sec: ::Float

        attr_accessor current_edge_start_sec: ::Float

        attr_accessor parent_hash: ::Integer?

        attr_accessor previous_direction: ::String

        attr_accessor closest_opposite_direction_hash: ::Integer

        attr_accessor closest_opposite_direction_edge_start: ::Float

        def initialize: (hash_value: ::Integer, pathway_start_sec: ::Float, current_edge_start_sec: ::Float) -> void

        def encode: () -> ::String

        def encode_b64: () -> ::String
        def self.decode_b64: (::String encoded_ctx) -> PathwayContext?
        def self.decode: (::String binary_data) -> PathwayContext?

        private

        def encode_var_int_64: (::Integer value) -> ::String
        def self.decode_varint: (untyped io) -> ::Integer?
      end
    end
  end
