module Datadog
  module Tracing
    module Contrib
      module Excon
        class Middleware < ::Excon::Middleware::Base
          include Contrib::HttpAnnotationHelper

          DEFAULT_ERROR_HANDLER: untyped

          def initialize: (untyped stack, ?::Hash[untyped, untyped] options) -> void

          def request_call: (untyped datum) -> untyped

          def response_call: (untyped datum) -> untyped

          def error_call: (untyped datum) -> untyped
          def self.with: (?::Hash[untyped, untyped] options) -> untyped
          def self.around_default_stack: () -> untyped

          private

          def analytics_enabled?: () -> untyped

          def analytics_sample_rate: () -> untyped

          def distributed_tracing?: () -> untyped

          def error_handler: () -> untyped

          def annotate!: (untyped span, untyped datum) -> untyped

          def handle_response: (untyped datum) -> untyped

          def propagate!: (untyped trace, untyped span, untyped datum) -> untyped

          def build_request_options!: (untyped datum) -> untyped

          def datadog_configuration: (?::Symbol host) -> untyped
        end
      end
    end
  end
end
