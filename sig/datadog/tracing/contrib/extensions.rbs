module Datadog
  module Tracing
    module Contrib
      module Extensions
        def self.extend!: () -> untyped
        module Helpers
          def registry: () -> untyped
        end
        module Configuration
          def configure: () ?{ () -> untyped } -> untyped
          module Settings
            InvalidIntegrationError: StandardError
            def instrument: (Symbol integration_name, ?::Hash[Symbol, untyped] options) ?{ () -> untyped } -> Contrib::Integration
            alias use instrument
            def []: (untyped integration_name, ?::Symbol key) -> untyped
            def integrations_pending_activation: () -> untyped
            def instrumented_integrations: () -> untyped
            def reset!: () -> untyped
            def fetch_integration: (untyped name) -> untyped
            def ignore_integration_load_errors?: () -> (untyped | false)

            def ignore_integration_load_errors=: (untyped value) -> untyped
          end
        end
      end
    end
  end
end
