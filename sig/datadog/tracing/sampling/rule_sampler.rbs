module Datadog
  module Tracing
    module Sampling
      class RuleSampler
        attr_reader rules: untyped

        attr_reader rate_limiter: untyped

        attr_reader default_sampler: untyped
        def initialize: (?untyped rules, ?rate_limit: untyped, ?rate_limiter: untyped?, ?default_sample_rate: untyped, ?default_sampler: untyped?) -> void
        def sample?: (untyped _trace) -> untyped

        def sample!: (untyped trace) -> untyped
        def update: (*untyped args, **untyped kwargs) -> (false | untyped)

        def self.parse: (Array[Hash[Symbol, untyped]] rules, Float rate_limit, Float default_sample_rate) -> RuleSampler?

        private

        def sample_trace: (untyped trace) { (untyped) -> untyped } -> untyped
        def set_priority: (untyped trace, untyped sampled) -> untyped

        def set_rule_metrics: (untyped trace, untyped sample_rate) -> untyped

        def set_limiter_metrics: (untyped trace, untyped limiter_rate) -> untyped
      end
    end
  end
end
