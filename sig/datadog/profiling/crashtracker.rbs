module Datadog
  module Profiling
    class Crashtracker
      type exporter_configuration_array = [:agentless | :agent, untyped]

      LIBDATADOG_API_FAILURE: ::String?

      private

      attr_reader exporter_configuration: exporter_configuration_array
      attr_reader tags_as_array: ::Array[[::String, ::String]]
      attr_reader path_to_crashtracking_receiver_binary: ::String
      attr_reader ld_library_path: ::String
      attr_reader upload_timeout_seconds: ::Integer

      public

      def initialize: (
        exporter_configuration: exporter_configuration_array,
        tags: ::Hash[::String, ::String],
        upload_timeout_seconds: ::Integer,
        ?path_to_crashtracking_receiver_binary: ::String,
        ?ld_library_path: ::String,
      ) -> void

      def start: -> void
      def stop: -> void
      def reset_after_fork: -> void

      private

      def start_or_update_on_fork: (action: :start | :update_on_fork) -> void

      def self._native_start_or_update_on_fork: (
        action: :start | :update_on_fork,
        exporter_configuration: exporter_configuration_array,
        path_to_crashtracking_receiver_binary: ::String,
        ld_library_path: ::String,
        tags_as_array: ::Array[[::String, ::String]],
        upload_timeout_seconds: ::Integer,
      ) -> void

      def self._native_stop: -> void
    end
  end
end
