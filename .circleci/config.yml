version: 2.1

# Common variables, containers, jobs and steps.
job_defaults: &job_defaults
  # TODO: We should move away from using a directory
  # TODO: that requires root permission to be created.
  # TODO: Changing this requires rebuilding all docker images.
  working_directory: /app
  shell: /bin/bash --login

test_containers:
  - &job_parameters
    parameters:
      ruby_version:
        description: Ruby version
        type: string
      image:
        description: Docker image location
        type: string
      jit:
        description: Jit enabled?
        type: boolean
        default: false
      resource_class_to_use:
        description: Resource class to use
        type: string
        default: medium
      edge:
        description: Use latest version of dependencies during testing
        type: boolean
        default: false
    resource_class: <<parameters.resource_class_to_use>>
  - &container_base_environment
    BUNDLE_GEMFILE: /app/Gemfile
    JRUBY_OPTS: --dev # Faster JVM startup: https://github.com/jruby/jruby/wiki/Improving-startup-time#use-the---dev-flag
  - &container_parameters_environment
    - *container_base_environment
    - RUBY_OPT: <<# parameters.jit >>--jit<</ parameters.jit >>
    - TEST_DATADOG_INTEGRATION: 1
    - COVERAGE_BASE_DIR: coverage
  - &container_base
    image: <<parameters.image>>
    environment:
      *container_parameters_environment
  - &test_job_default
    <<: *job_defaults
    <<: *job_parameters
    docker:
      - *container_base
  - &container_postgres
    image: postgres:9.6
    environment:
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_USER=postgres
      - POSTGRES_DB=postgres
  - &postgres_port 5432
  - &container_presto
    # Move to trinodb/trino after https://github.com/treasure-data/presto-client-ruby/issues/64 is resolved.
    image: starburstdata/presto:332-e.9
  - &presto_port 8080
  - &container_mysql
    image: mysql:5.6
    environment:
      - MYSQL_ROOT_PASSWORD=root
      - MYSQL_PASSWORD=mysql
      - MYSQL_USER=mysql
  - &mysql_port 3306
  - &container_elasticsearch
    image: elasticsearch:2.4
  - &elasticsearch_port 9200
  - &container_redis
    image: redis:3.0
  - &redis_port 6379
  - &container_mongo
    image: mongo:3.5
  - &mongo_port 27017
  - &container_memcached
    image: memcached:1.5-alpine
  - &memcached_port 11211
  - &container_agent
    image: datadog/agent
    environment:
      - DD_APM_ENABLED=true
      - DD_BIND_HOST=0.0.0.0
      - DD_API_KEY=00000000000000000000000000000000
  - &agent_port 8126

check_exact_bundle_cache_hit: &check_exact_bundle_cache_hit
  run:
    name: Check if we restored an exact cache of gems that this job requires
    # CircleCI doesn't tell us if we had a perfect cache match or partial match.
    # To accomplish such check, we save `bundle_checksum` alongside the cached
    # gems. After gems are restored, we compare the restored `bundle_checksum`'s
    # content with the current commit's `bundle_checksum`.
    #
    # Because we are using a "soft" approach to our gemset lock files, we allow
    # for partial matches to lock files until a new release goes out.
    # This means that we might install slightly out of date gems, instead of the
    # very latest versions from RubyGems until the next gemset update commit.
    command: |
      ! cmp -s .circleci/bundle_checksum /usr/local/bundle/bundle_checksum
      echo "export CI_BUNDLE_CACHE_HIT=$?" >> $BASH_ENV
save_bundle_checksum: &save_bundle_checksum
  run:
    name: Save current bundle checksum alongside cached gems
    command: |
      if [ "$CI_BUNDLE_CACHE_HIT" != 1 ]; then
        # Recompute gemfiles/*.lock checksum, as those files might have changed
        cat Gemfile Gemfile.lock Appraisals gemfiles/*.gemfile.lock | md5sum > .circleci/bundle_checksum
      fi
      cp .circleci/bundle_checksum /usr/local/bundle/bundle_checksum
step_bundle_install: &step_bundle_install
  run:
    name: Install gem dependencies
    command: |
      if [ "$CI_BUNDLE_CACHE_HIT" != 1 ]; then
        bundle install
      else
        echo "All required gems were found in cache."
      fi
step_rubocop: &step_rubocop
  run:
    name: Delint with Rubocop
    command: bundle exec rake rubocop
step_sorbet_type_checker: &step_sorbet_type_checker
  run:
    name: Run sorbet type checker
    command: bundle exec rake typecheck
step_appraisal_install: &step_appraisal_install
  run:
    name: Install Appraisal gems
    command: |
      if [ "$CI_BUNDLE_CACHE_HIT" != 1 ]; then
        bundle exec appraisal install
      else
        echo "All required gems were found in cache."
      fi
step_appraisal_update: &step_appraisal_update
  run:
    name: Update Appraisal gems
    command: | # Remove all generated gemfiles and lockfiles, resolve, and install dependencies again
      bundle exec appraisal update
step_compute_bundle_checksum: &step_compute_bundle_checksum
  run:
    name: Compute bundle checksum
    # This checksum leaves some leeway for changes to Gemfile.lock, as
    # we have a "soft" approach to committing gemset changes until release, given
    # updating the gemset lock files produces extremely large commits.
    command: |
      bundle lock # Create Gemfile.lock
      cat Gemfile Gemfile.lock Appraisals gemfiles/*.gemfile.lock | md5sum > .circleci/bundle_checksum
step_run_all_tests: &step_run_all_tests
  run:
    name: Run tests
    command: |
        echo "
        --format=progress
        --format=RspecJunitFormatter
        --out='/tmp/rspec/-<%= ARGV.join.gsub('/', '-') %>.xml'
        " > .rspec-local # Configure RSpec metadata exporter
        bundle exec rake ci
step_release_docs: &step_release_docs
  run:
    name: Upload release docs
    command: S3_DIR=trace bundle exec rake release:docs

filters_all_branches_and_tags: &filters_all_branches_and_tags
  filters:
    tags:
      only: /.*/
filters_only_release_tags: &filters_only_release_tags
  filters:
    branches:
      ignore: /.*/
    tags:
      only: /^v\d+(\.\d+){0,3}(\.(alpha|beta|rc)\d+)?$/

orbs:
  orb:
    jobs:
      build:
        <<: *test_job_default
        resource_class: <<parameters.resource_class_to_use>>
        steps:
          - checkout
          - restore_cache:
              keys:
                - '{{ .Environment.CIRCLE_CACHE_VERSION }}-bundled-repo-<<parameters.ruby_version>>-{{ .Environment.CIRCLE_SHA1 }}'
          - *step_compute_bundle_checksum
          - restore_cache:
              keys:
                - bundle-{{ .Environment.CIRCLE_CACHE_VERSION }}-<<parameters.ruby_version>>-{{ checksum "lib/ddtrace/version.rb" }}-{{ .Branch }}-{{ checksum ".circleci/bundle_checksum" }}
                - bundle-{{ .Environment.CIRCLE_CACHE_VERSION }}-<<parameters.ruby_version>>-{{ checksum "lib/ddtrace/version.rb" }}-{{ .Branch }}-
                - bundle-{{ .Environment.CIRCLE_CACHE_VERSION }}-<<parameters.ruby_version>>-{{ checksum "lib/ddtrace/version.rb" }}
          - *check_exact_bundle_cache_hit
          - *step_bundle_install
          - when:
              condition:
                equal: [ << parameters.edge >>, true ]
              steps:
                - *step_appraisal_update # Run on latest version of all gems we integrate with
          - when:
              condition:
                not:
                  equal: [ << parameters.edge >>, true ]
              steps:
                - *step_appraisal_install # Run on a stable set of gems we integrate with
          - *save_bundle_checksum
          - save_cache:
              key: '{{ .Environment.CIRCLE_CACHE_VERSION }}-bundled-repo-<<parameters.ruby_version>>-{{ .Environment.CIRCLE_SHA1 }}'
              paths:
                - /app
          - save_cache:
              key: bundle-{{ .Environment.CIRCLE_CACHE_VERSION }}-<<parameters.ruby_version>>-{{ checksum "lib/ddtrace/version.rb" }}-{{ .Branch }}-{{ checksum ".circleci/bundle_checksum" }}
              paths:
                - /usr/local/bundle
      build_and_test_integration:
        executor: docker-integration
        parameters:
          ruby_version:
            description: Ruby version
            type: string
          integration_apps:
            description: Integration apps
            type: string
        steps:
          - checkout
          - setup_remote_docker:
              docker_layer_caching: true
              version: 20.10.6
          - run:
              name: Build integration base images
              command: ./integration/script/build-images -v <<parameters.ruby_version>>
          - run:
              name: Build integration app images
              command: |
                for i in <<parameters.integration_apps>>; do
                  ./integration/apps/$i/script/build-images -v <<parameters.ruby_version>>
                done
          - run:
              name: Test integration apps
              command: |
                for i in <<parameters.integration_apps>>; do
                  ./integration/apps/$i/script/ci -v <<parameters.ruby_version>>
                done
      test:
        <<: *test_job_default
        docker:
          - <<: *container_base
          - *container_postgres
          - *container_presto
          - *container_mysql
          - *container_elasticsearch
          - *container_redis
          - *container_mongo
          - *container_memcached
          - *container_agent
        parallelism: 22
        steps:
          - restore_cache:
              keys:
                - '{{ .Environment.CIRCLE_CACHE_VERSION }}-bundled-repo-<<parameters.ruby_version>>-{{ .Environment.CIRCLE_SHA1 }}'
          - restore_cache:
              keys:
                - bundle-{{ .Environment.CIRCLE_CACHE_VERSION }}-<<parameters.ruby_version>>-{{ checksum "lib/ddtrace/version.rb" }}-{{ .Branch }}-{{ checksum ".circleci/bundle_checksum" }}
          - run:
              name: Set coverage report directory
              command: |
                # Create a unique coverage directory for this job, to avoid conflicts when merging all results
                echo 'export COVERAGE_DIR="$COVERAGE_BASE_DIR/versions/$CIRCLE_JOB/$CIRCLE_NODE_INDEX"' >> $BASH_ENV
          # Wait for containers to start
          - docker-wait:
              port: *postgres_port
          - docker-wait:
              port: *presto_port
          - docker-wait:
              port: *mysql_port
          - docker-wait:
              port: *elasticsearch_port
          - docker-wait:
              port: *redis_port
          - docker-wait:
              port: *mongo_port
          - docker-wait:
              port: *memcached_port
          - docker-wait:
              port: *agent_port
          - *step_run_all_tests
          - store_test_results:
              path: /tmp/rspec
          - persist_to_workspace:
              root: .
              paths:
                - coverage
      benchmark:
        <<: *test_job_default
        docker:
          - <<: *container_base
          - *container_postgres
          - *container_redis
          - *container_agent
        steps:
          - restore_cache:
              keys:
                - '{{ .Environment.CIRCLE_CACHE_VERSION }}-bundled-repo-<<parameters.ruby_version>>-{{ .Environment.CIRCLE_SHA1 }}'
          - restore_cache:
              keys:
                - bundle-{{ .Environment.CIRCLE_CACHE_VERSION }}-<<parameters.ruby_version>>-{{ checksum "lib/ddtrace/version.rb" }}-{{ .Branch }}-{{ checksum ".circleci/bundle_checksum" }}
          - run:
              name: Run Benchmark
              command: bundle exec appraisal rails5-postgres-sidekiq ruby benchmarks/sidekiq_test.rb 2>&1 1> /dev/null | tee benchmark_results.csv
          - run:
              name: Run Benchmark without ddtracer
              command: rm -f lib/ddtrace.rb && bundle exec appraisal rails5-postgres-sidekiq ruby benchmarks/sidekiq_test.rb 2>&1 1> /dev/null | tee benchmark_results.csv
      lint:
        <<: *test_job_default
        steps:
          - restore_cache:
              keys:
                - '{{ .Environment.CIRCLE_CACHE_VERSION }}-bundled-repo-<<parameters.ruby_version>>-{{ .Environment.CIRCLE_SHA1 }}'
          - restore_cache:
              keys:
                - bundle-{{ .Environment.CIRCLE_CACHE_VERSION }}-<<parameters.ruby_version>>-{{ checksum "lib/ddtrace/version.rb" }}-{{ .Branch }}-{{ checksum ".circleci/bundle_checksum" }}
          - *step_rubocop
      sorbet_type_checker:
        <<: *test_job_default
        steps:
          - restore_cache:
              keys:
                - '{{ .Environment.CIRCLE_CACHE_VERSION }}-bundled-repo-<<parameters.ruby_version>>-{{ .Environment.CIRCLE_SHA1 }}'
          - restore_cache:
              keys:
                - bundle-{{ .Environment.CIRCLE_CACHE_VERSION }}-<<parameters.ruby_version>>-{{ checksum "lib/ddtrace/version.rb" }}-{{ .Branch }}-{{ checksum ".circleci/bundle_checksum" }}
          - *step_sorbet_type_checker
      coverage:
        <<: *test_job_default
        steps:
          - restore_cache:
              keys:
                - '{{ .Environment.CIRCLE_CACHE_VERSION }}-bundled-repo-<<parameters.ruby_version>>-{{ .Environment.CIRCLE_SHA1 }}'
          - restore_cache:
              keys:
                - bundle-{{ .Environment.CIRCLE_CACHE_VERSION }}-<<parameters.ruby_version>>-{{ checksum "lib/ddtrace/version.rb" }}-{{ .Branch }}-{{ checksum ".circleci/bundle_checksum" }}
          - attach_workspace:
              at: /tmp/workspace
          - run:
              name: Install codecov
              command: bundle add codecov
          - run:
              name: Generate coverage report artifact "coverage/index.html"
              command: COVERAGE_DIR=/tmp/workspace/coverage bundle exec rake coverage:report
          - run:
              name: Generate coverage report artifact "coverage/versions/*/index.html"
              command: COVERAGE_DIR=/tmp/workspace/coverage bundle exec rake coverage:report_per_ruby_version
          - store_artifacts:
              path: /tmp/workspace/coverage/report/
              destination: coverage
      changelog:
        <<: *test_job_default
        steps:
          - restore_cache:
              keys:
                - '{{ .Environment.CIRCLE_CACHE_VERSION }}-bundled-repo-<<parameters.ruby_version>>-{{ .Environment.CIRCLE_SHA1 }}'
          - restore_cache:
              keys:
                - bundle-{{ .Environment.CIRCLE_CACHE_VERSION }}-<<parameters.ruby_version>>-{{ checksum "lib/ddtrace/version.rb" }}-{{ .Branch }}-{{ checksum ".circleci/bundle_checksum" }}
          - attach_workspace:
              at: /tmp/workspace
          - run:
              name: Format changelog
              command: bundle exec rake changelog:format
          - run:
              name: Check if changelog was unformatted
              command: |
                if ! git diff-files --quiet; then
                  echo "Please run 'bundle exec rake changelog:format' and commit the results."
                fi
    commands:
      docker-wait:
        description: Wait for containers to listen on a TCP port.
        parameters:
          port:
            description: TCP port the container is listening on.
            type: integer
          timeout:
            description: How long to wait for the port to be responsive.
            type: string
            default: 1m
        steps:
          - run:
              name: Wait for container on port <<parameters.port>>
              command: dockerize -wait 'tcp://localhost:<<parameters.port>>' -timeout '<<parameters.timeout>>'
    executors:
      docker-integration:
        docker:
          - image: circleci/buildpack-deps:stretch

jobs:
  "deploy release":
    <<: *job_defaults
    docker:
      - environment:
          *container_base_environment
        image: ivoanjo/docker-library:ddtrace_rb_2_5_9
    steps:
      - checkout
      - run:
          name: Install AWS CLI
          command: |
            apt-get -y -qq update
            apt-get -y -qq install awscli
      - *step_bundle_install
      - *step_release_docs
      - run:
          name: Upload release Gem and rebuild index
          command: S3_DIR=release bundle exec rake release:gem
      - store_artifacts:
          path: pkg/
          destination: gem
  "deploy prerelease Gem":
    <<: *job_defaults
    docker:
      - environment:
          *container_base_environment
        image: ivoanjo/docker-library:ddtrace_rb_2_5_9
    steps:
      - run:
          name: Check if this commit author has publishing credentials
          command: |
            if [[ -z "${AWS_ACCESS_KEY_ID}" ]]
            then
              echo 'No AWS credentials, skipping publish of pre-release build.'
              circleci task halt
            fi
      - checkout
      - run:
          name: Install AWS CLI
          command: |
            apt-get -y -qq update
            apt-get -y -qq install awscli
      - *step_bundle_install
      - run:
          name: Rename to pre-release version based on branch name and build number
          command: |
            # create safe version string
            PRE=$(echo "${CIRCLE_BRANCH:-unknown}.${CIRCLE_BUILD_NUM:-R$RANDOM}" | sed -e 's/[^a-zA-Z0-9+]\{1,\}/./g')
            echo PRE=$PRE
            sed lib/ddtrace/version.rb -i -e "s/^\([\t ]*PRE\) *=*/\1 = \'${PRE}\' #/g"
      - run:
          name: Upload prerelease Gem and rebuild index
          # This was bumped from prerelease to prerelease-v2 to avoid the issue documented in
          # https://github.com/DataDog/dd-trace-rb/pull/1358
          command: S3_DIR=prerelease-v2 bundle exec rake release:gem
      - store_artifacts:
          path: pkg/
          destination: gem

job_configuration:
  # MRI
  - &config-2_1
    <<: *filters_all_branches_and_tags
    ruby_version: '2.1'
    image: ivoanjo/docker-library:ddtrace_rb_2_1_10
  - &config-2_2
    <<: *filters_all_branches_and_tags
    ruby_version: '2.2'
    image: ivoanjo/docker-library:ddtrace_rb_2_2_10
  - &config-2_3
    <<: *filters_all_branches_and_tags
    ruby_version: '2.3'
    image: ivoanjo/docker-library:ddtrace_rb_2_3_8
  - &config-2_4
    <<: *filters_all_branches_and_tags
    ruby_version: '2.4'
    image: ivoanjo/docker-library:ddtrace_rb_2_4_10
  - &config-2_5
    <<: *filters_all_branches_and_tags
    ruby_version: '2.5'
    image: ivoanjo/docker-library:ddtrace_rb_2_5_9
  - &config-2_6
    <<: *filters_all_branches_and_tags
    ruby_version: '2.6'
    image: ivoanjo/docker-library:ddtrace_rb_2_6_7
  - &config-2_7
    <<: *filters_all_branches_and_tags
    ruby_version: '2.7'
    image: ivoanjo/docker-library:ddtrace_rb_2_7_3
  - &config-3_0
    <<: *filters_all_branches_and_tags
    ruby_version: '3.0'
    image: ivoanjo/docker-library:ddtrace_rb_3_0_1
  - &config-3_0-jit
    <<: *filters_all_branches_and_tags
    ruby_version: '3.0'
    image: ivoanjo/docker-library:ddtrace_rb_3_0_1
    jit: true
  # JRuby
  - &config-jruby-9_2_0_0 # Oldest supported version
    <<: *filters_all_branches_and_tags
    ruby_version: 'jruby-9.2.0.0'
    image: ivoanjo/docker-library:ddtrace_rb_jruby_9_2_0_0
    resource_class_to_use: medium+
  - &config-jruby-9_2-latest # More recent release of 9.2
    <<: *filters_all_branches_and_tags
    ruby_version: 'jruby-9.2-latest'
    image: ivoanjo/docker-library:ddtrace_rb_jruby_9_2_18_0
  # TruffleRuby
  - &config-truffleruby-21_0_0
    <<: *filters_all_branches_and_tags
    ruby_version: 'truffleruby-21.0.0'
    image: ivoanjo/docker-library:ddtrace_rb_truffleruby_21_0_0
    resource_class_to_use: medium+

workflows:
  version: 2
  build-and-test:
    jobs:
      - orb/lint:
          <<: *config-2_6
          name: lint
          requires:
            - build-2.6
      - orb/sorbet_type_checker:
          <<: *config-2_6
          name: sorbet_type_checker
          requires:
            - build-2.6
      - orb/coverage:
          <<: *config-2_7
          name: coverage
          requires:
            - test-2.1
            - test-2.2
            - test-2.3
            - test-2.4
            - test-2.5
            - test-2.6
            - test-2.7
            - test-3.0
            - test-jruby-9.2.0.0
            - test-jruby-9.2-latest
            # soon™️ - test-truffleruby-21.0.0
      - orb/changelog:
          <<: *config-2_7
          name: changelog
          requires:
            - build-2.7
          filters:
            branches:
              only: /bump_to_version_.*/
      # Integration
      - orb/build_and_test_integration:
          name: build_and_test_integration-2.1
          integration_apps: 'rack'
          ruby_version: '2.1'
          <<: *filters_all_branches_and_tags
      - orb/build_and_test_integration:
          name: build_and_test_integration-2.2
          integration_apps: 'rack'
          ruby_version: '2.2'
          <<: *filters_all_branches_and_tags
      - orb/build_and_test_integration:
          name: build_and_test_integration-2.3
          integration_apps: 'rack rails-five'
          ruby_version: '2.3'
          <<: *filters_all_branches_and_tags
      - orb/build_and_test_integration:
          name: build_and_test_integration-2.4
          integration_apps: 'rack rails-five'
          ruby_version: '2.4'
          <<: *filters_all_branches_and_tags
      - orb/build_and_test_integration:
          name: build_and_test_integration-2.5
          integration_apps: 'rack rails-five'
          ruby_version: '2.5'
          <<: *filters_all_branches_and_tags
      - orb/build_and_test_integration:
          name: build_and_test_integration-2.6
          integration_apps: 'rack rails-five'
          ruby_version: '2.6'
          <<: *filters_all_branches_and_tags
      - orb/build_and_test_integration:
          name: build_and_test_integration-2.7
          integration_apps: 'rack rails-five'
          ruby_version: '2.7'
          <<: *filters_all_branches_and_tags
      - orb/build_and_test_integration:
          name: build_and_test_integration-3.0
          # Note: Ruby 3 is not supported by Rails 5, hence we skip it
          integration_apps: 'rack'
          ruby_version: '3.0'
          <<: *filters_all_branches_and_tags
      # MRI
      - orb/build:
          <<: *config-2_1
          name: build-2.1
      - orb/test:
          <<: *config-2_1
          name: test-2.1
          requires:
            - build-2.1
      - orb/build:
          <<: *config-2_2
          name: build-2.2
      - orb/test:
          <<: *config-2_2
          name: test-2.2
          requires:
            - build-2.2
      - orb/build:
          <<: *config-2_3
          name: build-2.3
      - orb/test:
          <<: *config-2_3
          name: test-2.3
          requires:
            - build-2.3
      - orb/benchmark:
          <<: *config-2_3
          name: benchmark-2.3
          requires:
            - build-2.3
      - orb/build:
          <<: *config-2_4
          name: build-2.4
      - orb/test:
          <<: *config-2_4
          name: test-2.4
          requires:
            - build-2.4
      - orb/build:
          <<: *config-2_5
          name: build-2.5
      - orb/test:
          <<: *config-2_5
          name: test-2.5
          requires:
            - build-2.5
      - orb/build:
          <<: *config-2_6
          name: build-2.6
      - orb/test:
          <<: *config-2_6
          name: test-2.6
          requires:
            - build-2.6
      - orb/build:
          <<: *config-2_7
          name: build-2.7
      - orb/test:
          <<: *config-2_7
          name: test-2.7
          requires:
            - build-2.7
      - orb/build:
          <<: *config-3_0
          name: build-3.0
      - orb/test:
          <<: *config-3_0
          name: test-3.0
          requires:
            - build-3.0
      - orb/build:
          <<: *config-3_0-jit
          name: build-3.0-jit
      - orb/test:
          <<: *config-3_0-jit
          name: test-3.0-jit
          requires:
            - build-3.0-jit
      # JRuby
      - orb/build:
          <<: *config-jruby-9_2_0_0
          name: build-jruby-9.2.0.0
      - orb/test:
          <<: *config-jruby-9_2_0_0
          name: test-jruby-9.2.0.0
          requires:
            - build-jruby-9.2.0.0
      - orb/build:
          <<: *config-jruby-9_2-latest
          name: build-jruby-9.2-latest
      - orb/test:
          <<: *config-jruby-9_2-latest
          name: test-jruby-9.2-latest
          requires:
            - build-jruby-9.2-latest
      # TruffleRuby
      # soon™️
      # - orb/build:
      #     <<: *config-truffleruby-21_0_0
      #     name: build-truffleruby-21.0.0
      # - orb/test:
      #     <<: *config-truffleruby-21_0_0
      #     name: test-truffleruby-21.0.0
      #     requires:
      #       - build-truffleruby-21.0.0
      # Release jobs
      - "deploy prerelease Gem":
          <<: *filters_all_branches_and_tags
          requires:
            - lint
            - sorbet_type_checker
            - test-2.1
            - test-2.2
            - test-2.3
            - test-2.4
            - test-2.5
            - test-2.6
            - test-2.7
            - test-3.0
            - test-3.0-jit
            - test-jruby-9.2.0.0
            - test-jruby-9.2-latest
            # soon™️ - test-truffleruby-21.0.0
      - "deploy release":
          <<: *filters_only_release_tags
          requires:
            - lint
            - sorbet_type_checker
            - test-2.1
            - test-2.2
            - test-2.3
            - test-2.4
            - test-2.5
            - test-2.6
            - test-2.7
            - test-3.0
            - test-3.0-jit
            - test-jruby-9.2.0.0
            - test-jruby-9.2-latest
            # soon™️ - test-truffleruby-21.0.0
  # This workflow runs the same `build` and `test` jobs as above on a schedule.
  # Tasks related to housekeeping (e.g. prerelease) are not relevant
  # to this daily check, as they are not expected to be impacted here.
  edge:
    triggers:
      - schedule:
          cron: "0 0 * * 1-5" # Every weekday
          filters:
            branches:
              only:
                - master
    jobs:
      # Integration
      - orb/build_and_test_integration:
          name: build_and_test_integration-2.1
          integration_apps: 'ruby rack rspec'
          ruby_version: '2.1'
          <<: *filters_all_branches_and_tags
      - orb/build_and_test_integration:
          name: build_and_test_integration-2.2
          integration_apps: 'ruby rack rspec'
          ruby_version: '2.2'
          <<: *filters_all_branches_and_tags
      - orb/build_and_test_integration:
          name: build_and_test_integration-2.3
          integration_apps: 'ruby rack rails-five rspec'
          ruby_version: '2.3'
          <<: *filters_all_branches_and_tags
      - orb/build_and_test_integration:
          name: build_and_test_integration-2.4
          integration_apps: 'ruby rack rails-five rspec'
          ruby_version: '2.4'
          <<: *filters_all_branches_and_tags
      - orb/build_and_test_integration:
          name: build_and_test_integration-2.5
          integration_apps: 'ruby rack rails-five rspec'
          ruby_version: '2.5'
          <<: *filters_all_branches_and_tags
      - orb/build_and_test_integration:
          name: build_and_test_integration-2.6
          integration_apps: 'ruby rack rails-five rspec'
          ruby_version: '2.6'
          <<: *filters_all_branches_and_tags
      - orb/build_and_test_integration:
          name: build_and_test_integration-2.7
          integration_apps: 'ruby rack rails-five rspec'
          ruby_version: '2.7'
          <<: *filters_all_branches_and_tags
      - orb/build_and_test_integration:
          name: build_and_test_integration-3.0
          # TODO: Get Rack & Rails apps working with Ruby 3.0
          integration_apps: 'ruby'
          ruby_version: '3.0'
          <<: *filters_all_branches_and_tags
      # MRI
      - orb/build:
          <<: *config-2_1
          name: build-2.1
      - orb/test:
          <<: *config-2_1
          name: test-2.1
          requires:
            - build-2.1
      - orb/build:
          <<: *config-2_2
          name: build-2.2
      - orb/test:
          <<: *config-2_2
          name: test-2.2
          requires:
            - build-2.2
      - orb/build:
          <<: *config-2_3
          name: build-2.3
      - orb/test:
          <<: *config-2_3
          name: test-2.3
          requires:
            - build-2.3
      - orb/benchmark:
          <<: *config-2_3
          name: benchmark-2.3
          requires:
            - build-2.3
      - orb/build:
          <<: *config-2_4
          name: build-2.4
      - orb/test:
          <<: *config-2_4
          name: test-2.4
          requires:
            - build-2.4
      - orb/build:
          <<: *config-2_5
          name: build-2.5
      - orb/test:
          <<: *config-2_5
          name: test-2.5
          requires:
            - build-2.5
      - orb/build:
          <<: *config-2_6
          name: build-2.6
      - orb/test:
          <<: *config-2_6
          name: test-2.6
          requires:
            - build-2.6
      - orb/build:
          <<: *config-2_7
          name: build-2.7
      - orb/test:
          <<: *config-2_7
          name: test-2.7
          requires:
            - build-2.7
      - orb/build:
          <<: *config-3_0
          name: build-3.0
      - orb/test:
          <<: *config-3_0
          name: test-3.0
          requires:
            - build-3.0
      - orb/build:
          <<: *config-3_0-jit
          name: build-3.0-jit
      - orb/test:
          <<: *config-3_0-jit
          name: test-3.0-jit
          requires:
            - build-3.0-jit
      # JRuby
      - orb/build:
          <<: *config-jruby-9_2_0_0
          name: build-jruby-9.2.0.0
      - orb/test:
          <<: *config-jruby-9_2_0_0
          name: test-jruby-9.2.0.0
          requires:
            - build-jruby-9.2.0.0
      - orb/build:
          <<: *config-jruby-9_2-latest
          name: build-jruby-9.2-latest
      - orb/test:
          <<: *config-jruby-9_2-latest
          name: test-jruby-9.2-latest
          requires:
            - build-jruby-9.2-latest
      # TruffleRuby
      # soon™️
      # - orb/build:
      #     <<: *config-truffleruby-21_0_0
      #     name: build-truffleruby-21.0.0
      # - orb/test:
      #     <<: *config-truffleruby-21_0_0
      #     name: test-truffleruby-21.0.0
      #     requires:
      #       - build-truffleruby-21.0.0
