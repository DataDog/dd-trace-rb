name: 'Prepare bundle cache'

description: 'Sets up bundle cache for GitHub Actions'

outputs:
  cache-key:
    description: 'Cache key for the bundle'
    value: ${{ steps.restore-cache.outputs.cache-primary-key }}
  lockfile:
    description: 'Lockfile name'
    value: ${{ steps.lockfile.outputs.lockfile }}

runs:
  using: "composite"
  steps:
    - id: ruby-alias
      shell: bash
      run: |
        engine=$(ruby -e "puts RUBY_ENGINE")
        alias=$(ruby -e "puts RUBY_ENGINE_VERSION.split('.').take(2).join")

        echo "ruby-alias=$engine-$alias" >> "$GITHUB_OUTPUT"
    - name: Generate lockfile
      id: lockfile
      shell: bash
      env:
        LOCKFILE: lockfile-${{ steps.ruby-alias.outputs.ruby-alias }}
      run: |
        bundle lock
        echo "lockfile=$LOCKFILE" >> "$GITHUB_OUTPUT"
    - name: Upload lockfile
      uses: actions/upload-artifact@65c4c4a1ddee5b72f698fdd19549f0f0fb45cf08 # v4.6.0
      with:
        name: ${{ steps.lockfile.outputs.lockfile }}
        path: "*.lock"
    - name: Restore cache
      uses: actions/cache/restore@1bd1e32a3bdc45362d1e726936510720a7c30a57 # v4.2.0
      id: restore-cache
      with:
        key: bundle-${{ runner.os }}-${{ runner.arch }}-${{ steps.ruby-alias.outputs.ruby-alias }}-${{ hashFiles('*.lock') }}
        path: "/usr/local/bundle"
    - if: steps.restore-cache.outputs.cache-hit != 'true'
      shell: bash
      run: bundle install
    - if: steps.restore-cache.outputs.cache-hit != 'true'
      name: Save cache
      uses: actions/cache/save@1bd1e32a3bdc45362d1e726936510720a7c30a57 # v4.2.0
      with:
        key: "${{ steps.restore-cache.outputs.cache-primary-key }}"
        path: "/usr/local/bundle"
    - run: bundle check
      shell: bash
